name: "Python CI"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  setup-python:
      runs-on: ubuntu-latest
      env:
        PIP_NO_CACHE_DIR: false
        PIP_USER: 1
        PYTHONUSERBASE: ${{ github.workspace }}/.cache/py-user-base
        PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit-cache

      steps:
        - name: "Add custom PYTHONUSERBASE to PATH"
          run: echo '${{ env.PYTHONUSERBASE }}/bin/' >> $GITHUB_PATH

        - name: "Checkout repository"
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

        - name: "Setup Python"
          id: python
          uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
          with:
            python-version: '3.11'

        # This step caches our Python dependencies. To make sure we
        # only restore a cache when the dependencies, the python version,
        # the runner operating system, and the dependency location haven't
        # changed, we create a cache key that is a composite of those states.
        #
        # Only when the context is exactly the same, we will restore the cache.
        - name: "Python dependency caching"
          uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
          id: python_cache
          with:
            path: ${{ env.PYTHONUSERBASE }}
            key: "python-v0-${{ runner.os }}-${{ env.PYTHONUSERBASE }}-\
              ${{ steps.python.outputs.python-version }}"

        # Install our dependencies if we did not restore a dependency cache
        - name: "Install dependencies using pip"
          if: steps.python_cache.outputs.cache-hit != 'true'
          run: pip install --upgrade pip wheel setuptools pre-commit

        # This step caches our pre-commit environment. To make sure we
        # do create a new environment when our pre-commit setup changes,
        # we create a cache key based on relevant factors.
        - name: "Pre-commit environment caching"
          uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
          with:
            path: ${{ env.PRE_COMMIT_HOME }}
            key: "precommit-v0-${{ runner.os }}-${{ env.PRE_COMMIT_HOME }}-\
              ${{ steps.python.outputs.python-version }}-\
              ${{ hashFiles('./.pre-commit-config.yaml') }}"

  pre-commit:
    runs-on: ubuntu-latest

    needs: setup-python

    # As pre-commit does not support user installs, we set
    # PIP_USER=0 to not do a user install.
    steps:
      - name: "Run pre-commit hooks"
        run: export PIP_USER=0; pre-commit run --all-files

  lint:
    needs: pre-commit
    steps:
      - name: "Run ruff linter"
        run: python -m ruff check --output-format=github src/

      - name: "Run ruff formatter"
        run: python -m ruff format src/

  test:
    needs: lint
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.11" ]

    uses: darbiadev/.github/.github/workflows/python-test.yaml@f185cc076161b47921c6fb6da4c1fd5e40b50bff # v3.0.0
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}

  docs:
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: "Setup Python"
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: "Install dependencies"
        run: pip install .[docs]

      - name: "Build docs"
        run: |
          cd docs 
          make dirhtml

      - name: "Upload artifact"
        uses: actions/upload-pages-artifact@a753861a5debcf57bf8b404356158c8e1e33150c # v2.0.0
        with:
          path: ./docs/build/dirhtml
  deploy:
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@9dbe3824824f8a1377b8e298bafde1a50ede43e5 # v2.0.4
